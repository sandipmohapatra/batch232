PL-SQL:- Programming Language Structure Query Language
-----------------------------------------------------------------------------------------------------
In this we have have 3 parts
------------------------------------------
declare :- we can declare any variables.
begin:- we can write our logic.
end:- This is the end of the program.
---------------------------------------------------------
example  1
------------------------
declare 
a number:=10;
b number:=20;
c number;
begin
c:=a+b;
dbms_output.put_line('The sum of 2 numbers are '||c);
end;
------------------------------------------------------------------------------------
example 2
------------------------
declare 
a number:=10;
b number:=20;
c number:=30;
d number:=40;
e number:=50;
sum1 number;
avg1 number;
begin
sum1:=a+b+c+d+e;
dbms_output.put_line('The sum of 5 numbers are '||sum1);
avg1:=sum1/5;
dbms_output.put_line('The average of 5 numbers are '||avg1);
end;
------------------------------------------------------------------------------------------------
example-3
--------------------
to enter dynamic values
-----------------------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=a+b;
dbms_output.put_line('The sum is '||c);
end;
---------------------------------------------------------------
example-4
----------------------
greatest of 2 numbers
-------------------------------------------
declare
a number;
b number;
begin
a:=:a;
b:=:b;
if(a>b)then
dbms_output.put_line('The greatest is '||a);
else
dbms_output.put_line('The greatest is '||b);
end if;
end;
--------------------------------------------------------------
example-5
--------------------
greatest of 3 numbers
-------------------------------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=:c;
if(a>b and a>c)then
dbms_output.put_line('The greatest is '||a);
elsif(b>a and b>c)then
dbms_output.put_line('The greatest is '||b);
else
dbms_output.put_line('The greatest is '||c);
end if;
end;
--------------------------------------------------------------
wap to enter a number and find it is even or odd.
wap to enter principal,rate,time and find simple interest.
si=(p*t*r)/100;
------------------------------------------------------------------------
example-6
-------------------------
wap to enter a number and find it is even or odd.
-------------------------------------------
declare
a number;
begin
a:=:a;
if(a mod 2=0)then
dbms_output.put_line('The no is even ');
else
dbms_output.put_line('The no is odd');
end if;
end;
---------------------------------------------------------------------
example-7
------------------------
declare
a number;
begin
a:=:a;
if(a mod 2=0)then
dbms_output.put_line('The no is even '||a||' This is even');
else
dbms_output.put_line('The no is odd '||a||' this is odd');
end if;
end;
-------------------------------------------------------------------------------------
example-8
------------------------
create table employee(empno number primary key, name varchar2(40) not null, address varchar2(30) unique, salary float check(salary >=40000));

primary key =unique+not null
not null=It cannot be empty.
check =It checks the condition mentioned.
----------------------------------------------------------------------

declare
empno number;
name varchar2(30);
address varchar2(30);
salary float;
begin
empno:=:empno;
name:=:name;
address:=:address;
salary:=:salary;
insert into employee values(empno,name,address,salary);
end;

select * from employee;
----------------------------------------------------------------------------------------------
example-9
--------------------------------
begin
insert into employee values(102,'sandip','Hyderabad',60000);
dbms_output.put_line('row inserted');

update employee set name='kiran',address='bangalore',salary=56000 where empno=101; 
dbms_output.put_line('row updated');

delete from employee where empno=101; 
dbms_output.put_line('row deleted');
end;
-----------------------------------------------------------------------------------------
example-10
-------------------
declare
a number;
b number;
oper varchar2(20);
begin
a:=:a;
b:=:b;
oper:=:oper;
case 
when oper='add' then
dbms_output.put_line('The sum is '||(a+b));
when oper='sub' then
dbms_output.put_line('The sub is '||(a-b));
when oper='mul' then
dbms_output.put_line('The mul is '||(a*b));
when oper='div' then
dbms_output.put_line('The div is '||(a/b));
else
dbms_output.put_line('Invalid entry');
end case;
end;
----------------------------------------------------------------------------
wap to do a bank operation
deposite
withdraw
balance check
invalid input
use case when and then.
-----------------------------------------------------------
create table bank(accno number primary key, name varchar2(40) not null, address varchar2(30) unique, balance float check(balance >=1000));


declare
accno number;
name varchar2(30);
address varchar2(30);
balance float;
begin
accno:=:accno;
name:=:name;
address:=:address;
balance:=:balance;
insert into bank values(accno,name,address,balance);
end;
----------------------------------------------------------------
declare
accno number;
name varchar2(30);
address varchar2(30);
balance float:=5000;
transaction varchar2(30);
amount float;
begin
accno:=:accno;
name:=:name;
address:=:address;
transaction:=:transaction;
amount:=:amount;
case

when transaction='deposite' then
balance:=balance+amount;
insert into bank values(accno,name,address,balance);
dbms_output.put_line('Amount deposite');

when transaction='withdraw' then
balance:=balance-amount;
if(balance >=1000)then
insert into bank values(accno,name,address,balance);
else
dbms_output.put_line('Amount cannot be withdrawn');
end if;
else
dbms_output.put_line('Invalid input');
end case;
end;
----------------------------------------------------------------

employee table
employee takes some leave
calculate  the employee worked days.
calculate his/her salary.
if per day salary is 2000.
-----------------------------------------------------------------
loop
-----------------
for loop 
for i in 1..10 loop
--------------------------------
declare 
i number;
begin
for i in 1..10 loop
dbms_output.put_line(i);
end loop;
end;
--------------------------------------------------------------------------
reverse loop
------------------
declare 
i number;
begin
for i in reverse 1..10 loop
dbms_output.put_line(i);
end loop;
end;

--------------------------------------------------------------------
write a program to enter radius of a circle and find area of the circle.
area=3.14*r*r;
----------------------------------------------------------------------------------
create table circle232(radius number,area number);
declare
pi constant number:=3.14;
radius number;
area number;
begin
for radius in 5..10 loop
area:=pi*power(radius,2);
insert into circle232 values(radius,area);
end loop;
end;

select * from circle232;
---------------------------------------------------------------------------------------
wap to display table of a given number.
5 * 1 =5
-----------------------------------------------------------------------------------
declare
x number;
y number;
begin
x:=:x;
for y in 1..10 loop
dbms_output.put_line(x || ' * '|| y ||' = '|| x*y);  
end loop;
end;
--------------------------------------------------------------------------------
case - when
-------------------------
enter your grade 'A/B/C/D' and display excellent for A,very good for B,good for C and Fair for D.

declare 
grade char(1);
begin
grade:=:grade;
case grade
when 'A' then dbms_output.put_line('Excellent');
when 'B' then dbms_output.put_line('very good');
when 'C' then dbms_output.put_line('good');
when 'D' then dbms_output.put_line('fair');
else
dbms_output.put_line('try well next time');
end case;
end;
-------------------------------------------------------------------------------------------------------------
wap to create a table for student
enter rollno,name,address,total marks ,average and calculate grade.
if(average >=80) ----First Division
if(average >=70) ----Second Division
if(average >=50) ----Third Division
else
fail
----------------------------------------------------------------------------------------------

create table student (rollno number,name varchar2(30),address varchar2(30),tmarks number,avg number,grade varchar2(30));

declare
rollno number;
name varchar2(30);
address varchar2(30);
tmarks number;
avg1 number;
begin
rollno:=:rollno;
name:=:name;
address:=:address;
tmarks:=:tmarks;
avg1:=(tmarks/6);
if(avg1 >= 80) then 
insert into student values(rollno,name,address,tmarks,avg1,'First Division');
elsif(avg1 >= 70) then 
insert into student values(rollno,name,address,tmarks,avg1,'Second Division');
elsif(avg1 >= 50) then 
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
else
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
end if;
end;

select * from student;
 

----------------------------------------------------------------------------------------------------------------------------------

declare
rollno student.rollno%type;
name student.name%type;
address student.address%type;
tmarks student.rollno%type;
avg1 student.rollno%type;
begin
rollno:=:rollno;
name:=:name;
address:=:address;
tmarks:=:tmarks;
avg1:=(tmarks/6);
if(avg1 >= 80) then 
insert into student values(rollno,name,address,tmarks,avg1,'First Division');
elsif(avg1 >= 70) then 
insert into student values(rollno,name,address,tmarks,avg1,'Second Division');
elsif(avg1 >= 50) then 
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
else
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
end if;
end;


select * from student;
-----------------------------------------------------------------------------------------------------
function:- functions are 2 types.
------------------------------------------------------------
1)user defined function
2)pre-defined functions. example:- sum(),avg(),max(),min(),concate().......
---------------------------------
user defined function
-------------------------------
create or replace function addno(i number,j number) return number is
begin
return i+j;
end;
--------------------------------------------------
declare
a number;
b number;
begin
dbms_output.put_line('The sum of two numbers is'||addno(10,20));
end;
----------------------------------------------------------
user defined function
-------------------------------
create or replace function addno(i number,j number,k number) return number is
begin
return i+j+k;
end;
--------------------------------------------------
declare
a number;
b number;
c number;
begin
dbms_output.put_line('The sum of two numbers is '||addno(10,20,30));
end;
----------------------------------------------------------
* always a function return a value.
-----------------------------------------------------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=:c;
dbms_output.put_line('The sum of two numbers is '||addno(a,b,c));
end;
-------------------------------------------------------------------------------------------------------
create 3 more function
to subtract 2 numbers
to multiply 2 numbers
to divide 2 numbers
-----------------------------------------------------------------------
create or replace function addno(i number,j number) return number is
begin
return i+j;
end;

create or replace function subno(i number,j number) return number is
begin
return i-j;
end;

create or replace function mulno(i number,j number) return number is
begin
return i*j;
end;

create or replace function divno(i number,j number) return number is
begin
return i/j;
end;

--------------------------------------------------
declare
a number;
b number;
begin
a:=:a;
b:=:b;
dbms_output.put_line('The sum of two numbers is '||addno(a,b));
dbms_output.put_line('The sub of two numbers is '||subno(a,b));
dbms_output.put_line('The mul of two numbers is '||mulno(a,b));
dbms_output.put_line('The div of two numbers is '||divno(a,b));
end;
------------------------------------------------------------------------------------------------------
Assignment
-------------------
1)wap to enter radius and find the area of the circle using function.
2)wap to enter a number and find if it is even or odd using function.
3)wap to find simple interest using function,
si=(p*t*r)/100;
all input take dymanically..
---------------------------------------------------------------------------------------------------------
wap to find out the designation of an employee by entering his/her salary
--------------------------------------------------------------------------------------------------
create or replace function design(salary number) return varchar2 is
begin
if(salary >=100000) then
return 'CEO';
elsif(salary>=50000) then
return 'Manager';
elsif(salary>=30000) then
return 'Worker';
elsif(salary>=20000) then
return 'Helper';
else
return 'Watchman';
end if;
end;
---------------------------------------------------------------------------------------
select design(15000) from dual;
---------------------------------------------------------------------------------------
Procedure
---------------------
It is a pl-sql block which execute when called but doesnot return any value.
----------------------------------------------------------------------------------------------------
example-1
--------------------------
create table employee(empno number,name varchar2(30),address varchar2(30),salary number);
select * from employee;
---------------------------------------------------------------------
create or replace procedure deleteemp is
begin
insert into employee values(101,'bharati','Bihar',70000);
delete from employee where empno=102;
commit;
end;
------------------------------------------------------------------------
begin
deleteemp;
end;
-----------------------------------------------------------------------------

example-2
----------------
create or replace procedure add_no(i number default 0,j number default 0,k number default 0) is
begin
dbms_output.put_line('The sum of 3 nos are'||(i+j+k));
end;

begin
add_no(5,6,7);
end;
-------------------------------------------------------------------
example-3
-------------------
create table employee(empno number,name varchar2(30),address varchar2(30),salary number);
--------------------------------------------
create or replace procedure insertemp(empno number,name varchar2,address varchar2,salary number) is
begin
insert into employee values(empno,name,address,salary);
end;
---------------------------------------------------------------------------------------
declare 
empno number;
name varchar2(30);
address varchar2(30);
salary number;
begin
empno:=:empno;
name:=:name;
address:=:address;
salary:=:salary;
insertemp(empno,name,address,salary);
end;

select * from employee;

------------------------------------------------------------------------------------------
wap to enter accno,name,balance,
using procedure.
----------------------------------------------------------------
MySQL---auto_increment
Oracle---sequence
------------------------------------------------
sequence:- The value will automatically increment .it is used with rollno,accno,slno etc.....

example:- create sequence seq1 increment by 1 start with 1;

create table bank232(accno number,name varchar2(30),address varchar2(30),balance number);


insert into bank232 values(seq1.nextval,'sandip','bangalore',3600);

select * from bank232;

---------------------------------------------------------------------------------------------------------------------------
example 3
------------------
select * from employee;

create or replace procedure updateemp(newempno number,newsalary number) as
begin
update employee set salary = newsalary where empno=newempno;
end;

declare
empno number;
salary number;
begin
empno:=:empno;
salary:=:salary;
updateemp(empno,salary);
end;
---------------------------------------------------------------------------------------
join the two tables
---------------------------
select * from employee;
create table employee(empno number primary key,name varchar2(30),address varchar2(30),salary number);
select * from dept;
create table dept(empno number references employee,dept varchar2(30),incre number,phoneno varchar2(20));

insert into dept values(103,'dev',2000,'9900776655');

select a.empno,a.name,a.address,a.salary,b.dept,b.incre,b.phoneno from employee a,dept b where a.empno=b.empno;

select (a.empno,a.name,a.address,a.salary),(b.dept,b.incre,b.phoneno) from employee a,dept b where a.empno=b.empno;

a is the allias/other name of employee table.
b is the allias/other name of dept table.
a.empno=b.empno means where bothe the columns data match ,they will create a join.
----------------------------------------------------------------------------------------------------------------------------
view is a logical table based on another table.
a view does not contain any data .it only stores the complex query.
any insert,update or delete is done to the original table it will reflect to the view.
we can insert ,update or delete the view .It will effect the original table.

create view emp as select a.empno,a.name,a.address,a.salary,b.dept,b.incre,b.phoneno from employee a,dept b where a.empno=b.empno;

select * from emp;
delete from emp where dept='dev';
delete from emp where empno=101;
* the child table row will be deleted not the data from the master table.
---------------------------------------------------------------------------------------------------------------------
In this employee is the master table. and dept is the child table.
we cannot delete any row from the master table which will is used in the child table.
We have to delete the row from the child table first then we can delete the row from the master table.
-----------------------------------------------------------------------------------------------------------------------------------------
assignment
-------------------
create a student table:- rollno,name,address
create a marks table :- rollno ,phy,chem,maths,grade

join the two tables and display it.
insert the data using procedure....
----------------------------------------------------------------
SQL Operations
------------------------------------------------------------------------------------------------
1)TL (Transaction language) :-select

2)DML(data manipulation langauge) :-insert,update,delete
they are temporary .if we rollback it will come to previous state.

3)DCL (data control language) :-grant,revoke

4)DDL (data defination language) :-create,alter,drop

5)TCL (Transaction control langauge) :- commit,rollback.

*
create user amit identified by oracle;
system/1234 :- DBA .It can grant or revoke perminssion.
grant dba to amit;---It can do all the opreations.
revoke dba from amit;
drop user sandip123 cascade;
--------------------------------------------------------------------------------------------------
 DATE FUNCTION
---------------------------------------------------------------------------------------------------------------------
It is stored as a number in the database and hence one can add number to date ,subtract number to date.
1)select months_between('28-mar-2019','28-feb-2019') from dual;//dummy table 
2)select last_day(sysdate)from dual;
or
2)select last_day('02-feb-2019')from dual;
select sysdate from dual;
3)select to_char(sysdate,'DD Month yyyy HH:MI:SS AM AD') from dual;
To convert date data type to char data type.
-------------------------------------------------------------
4)select * from emp where to_char(hiredate,'D') in (1,2,6); 
(employee who have joined either on sunday,monday,friday)
5)select to_char(sysdate,'Day') from dual;
select to_char(sysdate,'Month') from dual;
select to_char(sysdate,'yyyy') from dual;
select to_char(sysdate,'D') from dual;
6)SELECT NEXT_DAY(SYSDATE, 'SUN') FROM DUAL;
SELECT to_date('5/jan/2014')FROM DUAL;
SELECT to_date('20201231','YYYYMMDD ')FROM DUAL;

select * from emp

SELECT ename, TO_CHAR(hiredate, 'Day') AS "Day" FROM Emp;
SELECT ename, TO_CHAR(hiredate, 'Month') AS "Day" FROM Emp;
SELECT ename, TO_CHAR(hiredate, 'year') AS "Day" FROM Emp;
SELECT ename, TO_CHAR(hiredate, 'yy') AS "Day" FROM Emp;
SELECT ename, TO_CHAR(hiredate, 'D') AS "Day" FROM Emp;
-----------------------------------------------------------------------------















