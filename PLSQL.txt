PL-SQL:- Programming Language Structure Query Language
-----------------------------------------------------------------------------------------------------
In this we have have 3 parts
------------------------------------------
declare :- we can declare any variables.
begin:- we can write our logic.
end:- This is the end of the program.
---------------------------------------------------------
example  1
------------------------
declare 
a number:=10;
b number:=20;
c number;
begin
c:=a+b;
dbms_output.put_line('The sum of 2 numbers are '||c);
end;
------------------------------------------------------------------------------------
example 2
------------------------
declare 
a number:=10;
b number:=20;
c number:=30;
d number:=40;
e number:=50;
sum1 number;
avg1 number;
begin
sum1:=a+b+c+d+e;
dbms_output.put_line('The sum of 5 numbers are '||sum1);
avg1:=sum1/5;
dbms_output.put_line('The average of 5 numbers are '||avg1);
end;
------------------------------------------------------------------------------------------------
example-3
--------------------
to enter dynamic values
-----------------------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=a+b;
dbms_output.put_line('The sum is '||c);
end;
---------------------------------------------------------------
example-4
----------------------
greatest of 2 numbers
-------------------------------------------
declare
a number;
b number;
begin
a:=:a;
b:=:b;
if(a>b)then
dbms_output.put_line('The greatest is '||a);
else
dbms_output.put_line('The greatest is '||b);
end if;
end;
--------------------------------------------------------------
example-5
--------------------
greatest of 3 numbers
-------------------------------------------
declare
a number;
b number;
c number;
begin
a:=:a;
b:=:b;
c:=:c;
if(a>b and a>c)then
dbms_output.put_line('The greatest is '||a);
elsif(b>a and b>c)then
dbms_output.put_line('The greatest is '||b);
else
dbms_output.put_line('The greatest is '||c);
end if;
end;
--------------------------------------------------------------
wap to enter a number and find it is even or odd.
wap to enter principal,rate,time and find simple interest.
si=(p*t*r)/100;
------------------------------------------------------------------------
example-6
-------------------------
wap to enter a number and find it is even or odd.
-------------------------------------------
declare
a number;
begin
a:=:a;
if(a mod 2=0)then
dbms_output.put_line('The no is even ');
else
dbms_output.put_line('The no is odd');
end if;
end;
---------------------------------------------------------------------
example-7
------------------------
declare
a number;
begin
a:=:a;
if(a mod 2=0)then
dbms_output.put_line('The no is even '||a||' This is even');
else
dbms_output.put_line('The no is odd '||a||' this is odd');
end if;
end;
-------------------------------------------------------------------------------------
example-8
------------------------
create table employee(empno number primary key, name varchar2(40) not null, address varchar2(30) unique, salary float check(salary >=40000));

primary key =unique+not null
not null=It cannot be empty.
check =It checks the condition mentioned.
----------------------------------------------------------------------

declare
empno number;
name varchar2(30);
address varchar2(30);
salary float;
begin
empno:=:empno;
name:=:name;
address:=:address;
salary:=:salary;
insert into employee values(empno,name,address,salary);
end;

select * from employee;
----------------------------------------------------------------------------------------------
example-9
--------------------------------
begin
insert into employee values(102,'sandip','Hyderabad',60000);
dbms_output.put_line('row inserted');

update employee set name='kiran',address='bangalore',salary=56000 where empno=101; 
dbms_output.put_line('row updated');

delete from employee where empno=101; 
dbms_output.put_line('row deleted');
end;
-----------------------------------------------------------------------------------------
example-10
-------------------
declare
a number;
b number;
oper varchar2(20);
begin
a:=:a;
b:=:b;
oper:=:oper;
case 
when oper='add' then
dbms_output.put_line('The sum is '||(a+b));
when oper='sub' then
dbms_output.put_line('The sub is '||(a-b));
when oper='mul' then
dbms_output.put_line('The mul is '||(a*b));
when oper='div' then
dbms_output.put_line('The div is '||(a/b));
else
dbms_output.put_line('Invalid entry');
end case;
end;
----------------------------------------------------------------------------
wap to do a bank operation
deposite
withdraw
balance check
invalid input
use case when and then.
-----------------------------------------------------------
create table bank(accno number primary key, name varchar2(40) not null, address varchar2(30) unique, balance float check(balance >=1000));


declare
accno number;
name varchar2(30);
address varchar2(30);
balance float;
begin
accno:=:accno;
name:=:name;
address:=:address;
balance:=:balance;
insert into bank values(accno,name,address,balance);
end;
----------------------------------------------------------------
declare
accno number;
name varchar2(30);
address varchar2(30);
balance float:=5000;
transaction varchar2(30);
amount float;
begin
accno:=:accno;
name:=:name;
address:=:address;
transaction:=:transaction;
amount:=:amount;
case

when transaction='deposite' then
balance:=balance+amount;
insert into bank values(accno,name,address,balance);
dbms_output.put_line('Amount deposite');

when transaction='withdraw' then
balance:=balance-amount;
if(balance >=1000)then
insert into bank values(accno,name,address,balance);
else
dbms_output.put_line('Amount cannot be withdrawn');
end if;
else
dbms_output.put_line('Invalid input');
end case;
end;
----------------------------------------------------------------

employee table
employee takes some leave
calculate  the employee worked days.
calculate his/her salary.
if per day salary is 2000.
-----------------------------------------------------------------
loop
-----------------
for loop 
for i in 1..10 loop
--------------------------------
declare 
i number;
begin
for i in 1..10 loop
dbms_output.put_line(i);
end loop;
end;
--------------------------------------------------------------------------
reverse loop
------------------
declare 
i number;
begin
for i in reverse 1..10 loop
dbms_output.put_line(i);
end loop;
end;

--------------------------------------------------------------------
write a program to enter radius of a circle and find area of the circle.
area=3.14*r*r;
----------------------------------------------------------------------------------
create table circle232(radius number,area number);
declare
pi constant number:=3.14;
radius number;
area number;
begin
for radius in 5..10 loop
area:=pi*power(radius,2);
insert into circle232 values(radius,area);
end loop;
end;

select * from circle232;
---------------------------------------------------------------------------------------
wap to display table of a given number.
5 * 1 =5
-----------------------------------------------------------------------------------
declare
x number;
y number;
begin
x:=:x;
for y in 1..10 loop
dbms_output.put_line(x || ' * '|| y ||' = '|| x*y);  
end loop;
end;
--------------------------------------------------------------------------------
case - when
-------------------------
enter your grade 'A/B/C/D' and display excellent for A,very good for B,good for C and Fair for D.

declare 
grade char(1);
begin
grade:=:grade;
case grade
when 'A' then dbms_output.put_line('Excellent');
when 'B' then dbms_output.put_line('very good');
when 'C' then dbms_output.put_line('good');
when 'D' then dbms_output.put_line('fair');
else
dbms_output.put_line('try well next time');
end case;
end;
-------------------------------------------------------------------------------------------------------------
wap to create a table for student
enter rollno,name,address,total marks ,average and calculate grade.
if(average >=80) ----First Division
if(average >=70) ----Second Division
if(average >=50) ----Third Division
else
fail
----------------------------------------------------------------------------------------------

create table student (rollno number,name varchar2(30),address varchar2(30),tmarks number,avg number,grade varchar2(30));

declare
rollno number;
name varchar2(30);
address varchar2(30);
tmarks number;
avg1 number;
begin
rollno:=:rollno;
name:=:name;
address:=:address;
tmarks:=:tmarks;
avg1:=(tmarks/6);
if(avg1 >= 80) then 
insert into student values(rollno,name,address,tmarks,avg1,'First Division');
elsif(avg1 >= 70) then 
insert into student values(rollno,name,address,tmarks,avg1,'Second Division');
elsif(avg1 >= 50) then 
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
else
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
end if;
end;

select * from student;
 

----------------------------------------------------------------------------------------------------------------------------------

declare
rollno student.rollno%type;
name student.name%type;
address student.address%type;
tmarks student.rollno%type;
avg1 student.rollno%type;
begin
rollno:=:rollno;
name:=:name;
address:=:address;
tmarks:=:tmarks;
avg1:=(tmarks/6);
if(avg1 >= 80) then 
insert into student values(rollno,name,address,tmarks,avg1,'First Division');
elsif(avg1 >= 70) then 
insert into student values(rollno,name,address,tmarks,avg1,'Second Division');
elsif(avg1 >= 50) then 
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
else
insert into student values(rollno,name,address,tmarks,avg1,'Third Division');
end if;
end;


select * from student;
-----------------------------------------------------------------------------------------------------
function:- functions are 2 types.
------------------------------------------------------------
1)user defined function
2)pre-defined functions. example:- sum(),avg(),max(),min(),concate().......
---------------------------------
user defined function
-------------------------------
create or replace function addno(i number,j number) return number is
begin
return i+j;
end;
--------------------------------------------------
declare
a number;
b number;
begin
dbms_output.put_line('The sum of two numbers is'||addno(10,20));
end;
----------------------------------------------------------
user defined function
-------------------------------
create or replace function addno(i number,j number,k number) return number is
begin
return i+j+k;
end;
--------------------------------------------------
declare
a number;
b number;
c number;
begin
dbms_output.put_line('The sum of two numbers is '||addno(10,20,30));
end;
----------------------------------------------------------
* allways a function return a value.
-----------------------------------------------------------------




















